{
    "typeName": "Dotmatics::AzureAD::Group",
    "description": "Creates an Azure AD Group",
    "replacementStrategy": "delete_then_create",
    "tagging": {
        "taggable": false
    },
    "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
    "definitions": {
        "Owner": {
          "description": "An owner of a Group.",
          "type": "object",
          "properties": {
            "OwnerType": {
              "type": "string",
              "description": "The type of owner.",
              "enum": [
                  "USER"
              ]
            },
            "Name": {
              "type": "string",
              "description": "The `User principal name` of the User."
            }
          },
          "required": [
            "OwnerType",
            "Name"
          ],
          "additionalProperties": false
        }
    },
    "properties": {
        "GroupName": {
            "description": "A name for the group",
            "type": "string"
        },
        "GroupType": {
            "description": "Type of group to create",
            "type": "string",
            "enum": [
                "SECURITY",
                "Microsoft365"
            ]
        },
        "GroupDescription": {
            "description": "Description of the group",
            "type": "string",
            "minLength": 1,
            "maxLength": 1024

        },
        "GroupId": {
            "description": "The ID of the group",
            "type": "string"
        },
        "Owners": {
            "description": "The Owners of the group",
            "type": "array",
            "uniqueItems": true,
            "insertionOrder": true,
            "items": {
                "$ref": "#/definitions/Owner"
            }
        },

        "CredentialAppClientId": {
            "description": "The Client(app)-ID of the client used the authenticate to the app",
            "type": "string"
        },
        "CredentialAppAPIToken": {
            "description": "Secret of the `CredentialAppClientId` App (API)",
            "type": "string"
        },
        "CredentialTenantId": {
            "description": "The GUID of the Office 365 Tenant that the `CredentialAppClientId` is in ",
            "type": "string"
        },

        "GeneratedId": {
            "description": "The generated read-only identifier.",
            "type": "string"
        }
    },
    "additionalProperties": false,
    "required": [
        "GroupName",
        "GroupType",
        "Owners",
        "CredentialAppClientId",
        "CredentialAppAPIToken",
        "CredentialTenantId",
        "GroupDescription"

    ],
    "readOnlyProperties": [
        "/properties/GroupId",
        "/properties/GeneratedId"
    ],
    "createOnlyProperties": [
        "/properties/GroupName",
        "/properties/GroupType",
        "/properties/CredentialTenantId"
    ],
    "writeOnlyProperties": [
        "/properties/CredentialAppClientId",
        "/properties/CredentialAppAPIToken",
        "/properties/CredentialTenantId"
    ],
    "primaryIdentifier": [
        "/properties/GeneratedId"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "dynamodb:CreateTable",
                "dynamodb:PutItem",
                "dynamodb:DeleteItem",
                "dynamodb:GetItem",
                "dynamodb:UpdateItem",
                "dynamodb:UpdateTable",
                "dynamodb:DescribeTable"
            ],
            "timeoutInMinutes": 5
        },
        "update": {
            "permissions": [
                "dynamodb:CreateTable",
                "dynamodb:PutItem",
                "dynamodb:DeleteItem",
                "dynamodb:GetItem",
                "dynamodb:UpdateItem",
                "dynamodb:UpdateTable",
                "dynamodb:DescribeTable"
            ],
            "timeoutInMinutes": 2
        },
        "read": {
            "permissions": [
                "dynamodb:CreateTable",
                "dynamodb:PutItem",
                "dynamodb:DeleteItem",
                "dynamodb:GetItem",
                "dynamodb:UpdateItem",
                "dynamodb:UpdateTable",
                "dynamodb:DescribeTable"
            ],
            "timeoutInMinutes": 2
        },
        "delete": {
            "permissions": [
                "dynamodb:CreateTable",
                "dynamodb:PutItem",
                "dynamodb:DeleteItem",
                "dynamodb:GetItem",
                "dynamodb:UpdateItem",
                "dynamodb:UpdateTable",
                "dynamodb:DescribeTable"
            ],
            "timeoutInMinutes": 5
        }
    }
}
